---
- sysctl:
    name: vm.max_map_count
    value: 262144
    state: present
    reload: yes

- name: Configure soft memlock
  lineinfile:
    dest: "/etc/security/limits.conf"
    line: "* soft memlock unlimited"

- name: Configure hard memlock
  lineinfile:
    dest: "/etc/security/limits.conf"
    line: "* hard memlock unlimited"

- name: Create group
  shell: groupadd -o -g {{ es_group_id }} {{ es_group }}
  ignore_errors: true

- name: Create user
  user: name={{ es_user }} uid={{ es_user_id }} group={{ es_group }} non_unique=true

#Create required directories
- name: Create Directories
  file: path={{ item }} state=directory owner={{ es_user }} group={{ es_group }}
  with_items:
    - /etc/elasticsearch

- name: Create Data Directories
  file: path={{ item }} state=directory owner={{ es_user }} group={{ es_group }}
  with_items:
    - /var/lib/elasticsearch

#Copy the config template
- name: Copy Configuration File
  template: src=elasticsearch.yml.j2 dest=/etc/elasticsearch/elasticsearch.yml owner={{ es_user }} group={{ es_group }} mode=0644 force=yes
  register: config_updated
  notify: restart elasticsearch

- name: Copy jvm.options File for Instance
  template: src=jvm.options.j2 dest=/etc/elasticsearch/jvm.options owner={{ es_user }} group={{ es_group }} mode=0644 force=yes
  notify: restart elasticsearch

- name: Install LVM software
  yum: name=lvm2
  when: es_config['node.data'] == True

- name: Create Volume Group
  lvg: vg={{ es_data_lvm_vgname }} pvs={{ es_data_lvm_pvs }} pesize={{ es_data_lvm_pesize }} force=yes
  ignore_errors: yes
  when: es_config['node.data'] == True

- name: Create Logical Volume
  lvol: vg={{ es_data_lvm_vgname }} lv={{ es_data_lvm_lvname }} size={{ es_data_lvm_lvsize }} force=false shrink=false
  when: es_config['node.data'] == True

- name: Create Filesystems
  filesystem: fstype=xfs dev=/dev/{{ es_data_lvm_vgname }}/{{ es_data_lvm_lvname }}
  when: es_config['node.data'] == True

- name: Configure Filesystem
  mount: state=mounted fstype=xfs src=/dev/{{ es_data_lvm_vgname }}/{{ es_data_lvm_lvname }} name={{ es_data_lvm_fs }} opts=noatime
  when: es_config['node.data'] == True

- name: Configure perms Filesystems
  file: state=directory mode=755 path={{ es_data_lvm_fs }} owner={{ es_user }} group={{ es_group }}
  when: es_config['node.data'] == True

- name: Pull elasticsearch image
  shell: docker pull "{{ elasticsearch_docker_image }}:{{ elasticsearch_version }}"
  register: result_docker
  changed_when: False
  until: result_docker|success
  retries: 3
  delay: 1
  tags: update

- name: Start elasticsearch containers
  docker_container:
    name: elasticsearch
    image: "{{ elasticsearch_docker_image }}:{{ elasticsearch_version }}"
    network_mode: host
    state: present
    restart_policy: unless-stopped
    restart_retries: 3
    privileged: true
    log_driver: json-file
    log_options:
      max-file: "1"
      max-size: "20m"
    labels: "{{ es_docker_labels }}"
#    ulimits:
#      - memlock=-1:-1
    volumes:
      - /etc/hosts:/etc/hosts
      - /etc/localtime:/etc/localtime
      - /etc/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - /etc/elasticsearch/jvm.options:/usr/share/elasticsearch/config/jvm.options
      - /var/lib/elasticsearch:/usr/share/elasticsearch/data
      - /etc/security/limits.conf:/etc/security/limits.conf

- name: Create init-script rhel6
  copy: src=elasticsearch_rhel6 dest=/etc/init.d/elasticsearch owner=root group=root mode=0755
  when:
    ansible_distribution_major_version|int < 7
    and ansible_os_family == 'RedHat'

- name: Create init-script rhel7
  copy: src=elasticsearch_rhel7 dest=/usr/lib/systemd/system/elasticsearch.service owner=root group=root mode=0644
  when:
    ansible_distribution_major_version|int > 6
    and ansible_os_family == 'RedHat'

- name: Enable init-scripts
  service: name=elasticsearch enabled=yes state=started
